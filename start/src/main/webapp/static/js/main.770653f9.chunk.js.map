{"version":3,"sources":["Components/ArtistTable.js","Components/App.js","index.js"],"names":["ArtistTable","state","posts","isLoading","error","axios","then","response","artists","data","artist","albums","rest","album","push","setState","catch","this","getArtistsInfo","columns","Header","accessor","defaultPageSize","pageSizeOptions","Component","App","ReactDOM","render","document","getElementById"],"mappings":"mSAqFeA,G,iNA/EbC,MAAQ,CACNC,MAAO,GACPC,WAAW,EACXC,MAAO,M,gFAGS,IAAD,OACfC,IAAM,iCACHC,MAAK,SAAAC,GACJ,IAAMC,EAAUD,EAASE,KACnBP,EAAQ,GAFE,uBAGhB,YAAqBM,EAArB,+CAA8B,CAAC,IAApBE,EAAmB,QACpBC,EAAoBD,EAApBC,OAAWC,EADS,YACAF,EADA,mCAE5B,YAAoBC,EAApB,+CAA4B,CAAC,IAAlBE,EAAiB,QAC1BX,EAAMY,KAAN,eAAgBF,EAAhB,GAAyBC,KAHC,oFAHd,kFAShB,EAAKE,SAAS,CACZb,QACAC,WAAW,OAGda,OAAM,SAAAZ,GAAK,OAAI,EAAKW,SAAS,CAAEX,QAAOD,WAAW,S,0CAIpDc,KAAKC,mB,+BAEG,IAAD,EACsBD,KAAKhB,MAA1BE,EADD,EACCA,UAAWD,EADZ,EACYA,MAiCrB,OACE,6BACE,kDACEC,EAOE,4CANF,kBAAC,IAAD,CACEM,KAAMP,EACNiB,QAtCU,CAAC,CACfC,OAAQ,cACRD,QAAS,CACP,CACEC,OAAQ,YACRC,SAAU,MAEZ,CACED,OAAQ,cACRC,SAAU,QAEZ,CACED,OAAQ,SACRC,SAAU,YAIhB,CACED,OAAQ,SACRD,QAAS,CACP,CACEC,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,mBACRC,SAAU,cAaVC,gBAAiB,EACjBC,gBAAiB,CAAC,EAAG,EAAG,U,GAvERC,cCIXC,MANf,WACE,OACI,kBAAC,EAAD,OCANC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.770653f9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from 'react-table-6';\nimport 'react-table-6/react-table.css';\n\nclass ArtistTable extends Component {\n  state = {\n    posts: [],\n    isLoading: true,\n    error: null,\n  };\n\n  getArtistsInfo() {\n    axios('http://localhost:9080/artists')\n      .then(response => {\n        const artists = response.data;\n        const posts = [];\n        for (const artist of artists) {\n          const { albums, ...rest } = artist;\n          for (const album of albums) {\n            posts.push({ ...rest, ...album });\n          }\n        };\n        this.setState({\n          posts,\n          isLoading: false\n        });\n      })\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n\n  componentDidMount() {\n    this.getArtistsInfo();\n  }\n  render() {\n    const { isLoading, posts } = this.state;\n    const columns = [{\n      Header: 'Artist Info',\n      columns: [\n        {\n          Header: 'Artist ID',\n          accessor: 'id'\n        },\n        {\n          Header: 'Artist Name',\n          accessor: 'name'\n        },\n        {\n          Header: 'Genres',\n          accessor: 'genres',\n        }\n      ]\n    },\n    {\n      Header: 'Albums',\n      columns: [\n        {\n          Header: 'Title',\n          accessor: 'title',\n        },\n        {\n          Header: 'Number of Tracks',\n          accessor: 'ntracks',\n        }\n      ]\n    }\n  ]\n\n  return (\n    <div>\n      <h2>Artist Web Service</h2>\n      {!isLoading ? (\n        <ReactTable\n          data={posts}\n          columns={columns}\n          defaultPageSize={4}\n          pageSizeOptions={[4, 5, 6]}\n        />) : (\n          <p>Loading .....</p>\n        )}\n    </div>\n    );\n  }\n}\n\nexport default ArtistTable;","import React from 'react';\nimport ArtistTable from './ArtistTable';\n\nfunction App() {\n  return (\n      <ArtistTable/>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}